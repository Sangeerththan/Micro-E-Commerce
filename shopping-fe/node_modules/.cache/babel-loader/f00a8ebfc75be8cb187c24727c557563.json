{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sangee/Desktop/2021/projects/Micro-E-Commerce/shopping-fe/src/pages/user/SignIn.js\";\nimport React, { PureComponent } from 'react';\nimport 'antd/dist/antd.css';\nimport { bindActionCreators } from \"redux\";\nimport { setPage } from '../../redux/actions/pageActions';\nimport { Form, Input, PageHeader, Button } from 'antd';\nimport { createUser, authenticateUser } from '../../redux/actions/UserActions';\nimport { connect } from 'react-redux';\nimport Home from '../../Home';\n\nclass SignIn extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.object = {\n      a: true,\n      b: false\n    };\n    this.layout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 8\n      }\n    };\n    this.commonRules = [{\n      required: true\n    }];\n    this.validateMessages = {\n      required: '${label} is required!',\n      types: {\n        email: '${label} is not validate email!',\n        number: '${label} is not a validate number!'\n      },\n      number: {\n        range: '${label} must be between ${min} and ${max}'\n      }\n    };\n\n    this.callCreateUser = user => {\n      this.setState({\n        username: user.user.username,\n        password: user.user.password\n      });\n      this.props.createUser(user);\n    };\n\n    this.callIsUsernameAvailable = async username => {\n      const url = \"http://localhost:8080/isUsernameAvailable\";\n      const response = await fetch(url, {\n        method: 'POST',\n        body: username,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      this.object.a = json;\n      this.setState({\n        isUsernameAvailable: json\n      });\n    };\n\n    this.onFinish = values => {\n      this.callCreateUser(values);\n    };\n\n    this.state = {\n      isUsernameAvailable: true,\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      isUsernameAvailable\n    } = this.state;\n    const {\n      setPage,\n      page,\n      authenticated,\n      authenticateUser,\n      proceedToLogin\n    } = this.props;\n\n    if (authenticated) {\n      this.setState({\n        password: ''\n      });\n      return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this);\n    } else if (page === \"Login\") {\n      return /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (proceedToLogin) {\n      let user = {};\n      user.username = this.state.username;\n      user.password = this.state.password;\n      authenticateUser(user);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        className: \"site-page-header\",\n        title: \"Create account for online shopping\",\n        subTitle: \"We serve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, { ...this.layout,\n        name: \"nest-messages\",\n        onFinish: this.onFinish,\n        validateMessages: this.validateMessages,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'username'],\n          label: \"Username\",\n          hasFeedback: true,\n          rules: [{\n            required: true\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(rule, value) {\n              if (value.length > 0) {\n                if ((!value || getFieldValue('user').username.length > 0) && isUsernameAvailable) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject('Username already taken. Please enter different username and continue.');\n              }\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: e => this.callIsUsernameAvailable(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'password'],\n          label: \"Password\",\n          hasFeedback: true,\n          rules: [{\n            required: true\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(rule, value) {\n              var passw = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,15}$/;\n\n              if (!value || getFieldValue('user').password.match(passw)) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('Your password must be at least 8 characters long, contain at least one number, special character and have a mixture of uppercase and lowercase letters.');\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'confirmpassword'],\n          label: \"Confirm password\",\n          hasFeedback: true,\n          rules: [{\n            required: true\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(rule, value) {\n              if (!value || getFieldValue('user').password === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject('The two passwords that you entered do not match!');\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'firstname'],\n          label: \"First name\",\n          rules: this.commonRules,\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'lastname'],\n          label: \"Last name\",\n          rules: this.commonRules,\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'address'],\n          label: \"Address\",\n          rules: this.commonRules,\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: { ...this.layout.wrapperCol,\n            offset: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Create account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            htmlType: \"button\",\n            offset: 6,\n            style: {\n              margin: 12\n            },\n            onClick: () => setPage(\"Login\"),\n            children: \"Already have account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(store) {\n  return {\n    isUsernameAvailable: store.userReducer.isUsernameAvailable,\n    authenticated: store.userReducer.authenticated,\n    proceedToLogin: store.userReducer.proceedToLogin,\n    page: store.pageReducer.page\n  };\n}\n\n;\n\nconst mapActionsToProps = dispatch => {\n  return bindActionCreators({\n    setPage,\n    createUser,\n    authenticateUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(SignIn);","map":{"version":3,"sources":["/home/sangee/Desktop/2021/projects/Micro-E-Commerce/shopping-fe/src/pages/user/SignIn.js"],"names":["React","PureComponent","bindActionCreators","setPage","Form","Input","PageHeader","Button","createUser","authenticateUser","connect","Home","SignIn","constructor","props","object","a","b","layout","labelCol","span","wrapperCol","commonRules","required","validateMessages","types","email","number","range","callCreateUser","user","setState","username","password","callIsUsernameAvailable","url","response","fetch","method","body","headers","json","isUsernameAvailable","onFinish","values","state","render","page","authenticated","proceedToLogin","getFieldValue","validator","rule","value","length","Promise","resolve","reject","e","target","passw","match","offset","margin","mapStateToProps","store","userReducer","pageReducer","mapActionsToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport 'antd/dist/antd.css';\nimport {bindActionCreators} from \"redux\";\nimport {setPage} from '../../redux/actions/pageActions';\nimport { Form, Input, PageHeader, Button } from 'antd';\nimport { createUser, authenticateUser } from '../../redux/actions/UserActions';\nimport {connect} from 'react-redux';\nimport Home from '../../Home';\n\nclass SignIn extends PureComponent {\n\n    constructor(props) {\n        super(props); \n    \n        this.state = {\n            isUsernameAvailable: true,\n            username: '',\n            password: ''\n        }\n    }\n\n    object = {\n        a: true,\n        b: false\n    }\n\n    layout = {\n        labelCol: {\n            span: 8,\n        },\n        wrapperCol: {\n            span: 8,\n        },\n    };\n\n    commonRules = [\n        {\n            required: true,\n        }];\n\n    validateMessages = {\n        required: '${label} is required!',\n        types: {\n            email: '${label} is not validate email!',\n            number: '${label} is not a validate number!',\n        },\n        number: {\n            range: '${label} must be between ${min} and ${max}',\n        },\n    };\n\n\n\n    callCreateUser = (user) => {\n        this.setState({username: user.user.username, password: user.user.password});\n        this.props.createUser(user);\n    }\n\n    callIsUsernameAvailable = async (username) => {\n        const url = \"http://localhost:8080/isUsernameAvailable\";\n        const response = await fetch(url, {method: 'POST', body:username, headers: {\n            'Content-Type': 'application/json'\n        }} );\n        const json = await response.json();\n        this.object.a = json;\n        this.setState({ isUsernameAvailable: json});\n\n    }\n\n    onFinish = (values) => {\n        this.callCreateUser(values);\n    };\n\n    render() {\n        const { isUsernameAvailable } = this.state;\n        const { setPage, page, authenticated, authenticateUser, proceedToLogin } = this.props;\n\n        if(authenticated){\n            this.setState({password: ''})\n            return <Home />\n          } else if(page === \"Login\"){\n            return <SignIn />\n          }\n          if(proceedToLogin){\n              let user = {};\n              user.username = this.state.username;\n              user.password = this.state.password;              \n              authenticateUser(user);\n          }\n        \n        return (\n            <div>\n            <PageHeader\n                className=\"site-page-header\"\n                title=\"Create account for online shopping\"\n                subTitle=\"We serve\"\n            />\n            <Form {...this.layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={this.validateMessages}>\n                <Form.Item\n                    name={['user', 'username']}\n                    label=\"Username\"\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (value.length > 0){\n                                    if ((!value || getFieldValue('user').username.length > 0) && isUsernameAvailable ) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject('Username already taken. Please enter different username and continue.');\n                                }\n                            },\n                        }),\n                    ]}\n                >\n                <Input onChange={e => this.callIsUsernameAvailable(e.target.value) }/>\n                </Form.Item>\n                <Form.Item\n                    name={['user', 'password']}\n                    label=\"Password\"\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                var passw = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,15}$/;\n                                if (!value || getFieldValue('user').password.match(passw)) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('Your password must be at least 8 characters long, contain at least one number, special character and have a mixture of uppercase and lowercase letters.');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item\n                    name={['user', 'confirmpassword']}\n                    label=\"Confirm password\"\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('user').password === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item name={['user', 'firstname']} label=\"First name\" rules={this.commonRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name={['user', 'lastname']} label=\"Last name\" rules={this.commonRules}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name={['user', 'address']} label=\"Address\" rules={this.commonRules}>\n                    <Input.TextArea />\n                </Form.Item>\n                <Form.Item wrapperCol={{ ...this.layout.wrapperCol, offset: 8 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Create account\n                </Button>\n                    <Button type=\"default\" htmlType=\"button\" offset={6} style={{margin:12}} onClick={() => setPage(\"Login\")}>\n                    Already have account\n                    </Button>\n                </Form.Item>\n            </Form>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps (store){\n    return {isUsernameAvailable: store.userReducer.isUsernameAvailable,\n    authenticated: store.userReducer.authenticated,\n    proceedToLogin: store.userReducer.proceedToLogin,\n    page: store.pageReducer.page};\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return bindActionCreators({\n        setPage,\n        createUser,\n        authenticateUser\n    }, dispatch)\n  }\n\nexport default connect(mapStateToProps, mapActionsToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}