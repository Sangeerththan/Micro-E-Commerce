{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sangee/Desktop/2021/projects/Micro-E-Commerce/shopping-fe/src/pages/account/Account.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getUserData } from '../../redux/actions/UserActions';\nimport { Table } from 'antd';\n\nclass Account extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: 'Firstname',\n      dataIndex: 'firstname',\n      key: 'firstname'\n    }, {\n      title: 'Lastname',\n      dataIndex: 'lastname',\n      key: 'lastname'\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address'\n    }];\n    this.state = {\n      selectedId: -1\n    };\n  }\n\n  componentDidMount() {\n    let payload = {};\n    payload.username = this.props.userReducer.username;\n    payload.token = this.props.userReducer.token;\n    this.props.getUserData(payload);\n  }\n\n  render() {\n    const {\n      userReducer\n    } = this.props;\n\n    if (userReducer.userData !== undefined) {\n      let user = {};\n      user.firstname = userReducer.userData.firstname;\n      user.lastname = userReducer.userData.lastname;\n      user.address = userReducer.userData.address;\n      user.key = userReducer.userData.key;\n      let data = [];\n      data.push(user);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          dataSource: data,\n          columns: this.columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = ({\n  userReducer\n}) => {\n  return {\n    userReducer\n  };\n};\n\nconst mapActionsToProps = dispatch => {\n  return bindActionCreators({\n    getUserData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Account);","map":{"version":3,"sources":["/home/sangee/Desktop/2021/projects/Micro-E-Commerce/shopping-fe/src/pages/account/Account.js"],"names":["React","connect","bindActionCreators","getUserData","Table","Account","PureComponent","constructor","props","columns","title","dataIndex","key","state","selectedId","componentDidMount","payload","username","userReducer","token","render","userData","undefined","user","firstname","lastname","address","data","push","mapStateToProps","mapActionsToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,KAAR,QAAoB,MAApB;;AAEA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,aAA5B,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAenBC,OAfmB,GAeT,CACN;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,SAAS,EAAE,WAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADM,EAMN;AACEF,MAAAA,KAAK,EAAE,UADT;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KANM,EAWN;AACEF,MAAAA,KAAK,EAAE,SADT;AAEEC,MAAAA,SAAS,EAAE,SAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAXM,CAfS;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,CAAC;AADJ,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAACC,QAAR,GAAmB,KAAKT,KAAL,CAAWU,WAAX,CAAuBD,QAA1C;AACAD,IAAAA,OAAO,CAACG,KAAR,GAAgB,KAAKX,KAAL,CAAWU,WAAX,CAAuBC,KAAvC;AACA,SAAKX,KAAL,CAAWL,WAAX,CAAuBa,OAAvB;AACH;;AAoBHI,EAAAA,MAAM,GAAG;AACP,UAAM;AAACF,MAAAA;AAAD,QAAgB,KAAKV,KAA3B;;AAEA,QAAGU,WAAW,CAACG,QAAZ,KAAyBC,SAA5B,EAAsC;AAClC,UAAIC,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAACC,SAAL,GAAiBN,WAAW,CAACG,QAAZ,CAAqBG,SAAtC;AACAD,MAAAA,IAAI,CAACE,QAAL,GAAgBP,WAAW,CAACG,QAAZ,CAAqBI,QAArC;AACAF,MAAAA,IAAI,CAACG,OAAL,GAAeR,WAAW,CAACG,QAAZ,CAAqBK,OAApC;AACAH,MAAAA,IAAI,CAACX,GAAL,GAAWM,WAAW,CAACG,QAAZ,CAAqBT,GAAhC;AACA,UAAIe,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAACC,IAAL,CAAUL,IAAV;AACE,0BACI;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,UAAU,EAAEI,IAAnB;AAAyB,UAAA,OAAO,EAAE,KAAKlB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAIL,KAZD,MAYM;AACJ,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAGF;;AAvDuC;;AA0D1C,MAAMoB,eAAe,GAAG,CAAC;AAACX,EAAAA;AAAD,CAAD,KAAmB;AACvC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJH;;AAME,MAAMY,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO7B,kBAAkB,CAAC;AACxBC,IAAAA;AADwB,GAAD,EAEtB4B,QAFsB,CAAzB;AAGD,CAJD;;AAMF,eAAe9B,OAAO,CAAC4B,eAAD,EAAkBC,iBAAlB,CAAP,CAA4CzB,OAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {getUserData} from '../../redux/actions/UserActions'\nimport {Table} from 'antd';\n\nclass Account extends React.PureComponent {\n\n    constructor(props) {\n        super(props); \n    \n        this.state = {\n            selectedId: -1,\n        }\n    }\n\n    componentDidMount(){\n        let payload = {};\n        payload.username = this.props.userReducer.username;\n        payload.token = this.props.userReducer.token;\n        this.props.getUserData(payload)    \n    }\n\n    columns = [\n        {\n          title: 'Firstname',\n          dataIndex: 'firstname',\n          key: 'firstname',\n        },\n        {\n          title: 'Lastname',\n          dataIndex: 'lastname',\n          key: 'lastname',\n        },\n        {\n          title: 'Address',\n          dataIndex: 'address',\n          key: 'address',\n        },\n      ];\n\n  render() {\n    const {userReducer} = this.props;\n\n    if(userReducer.userData !== undefined){\n        let user = {};\n        user.firstname = userReducer.userData.firstname;\n        user.lastname = userReducer.userData.lastname;\n        user.address = userReducer.userData.address;\n        user.key = userReducer.userData.key;\n        let data = [];\n        data.push(user);\n          return(\n              <div>\n                  <Table dataSource={data} columns={this.columns} />;\n              </div>)\n    }else {\n      return(<div></div>)\n    }\n\n\n  }\n}\n\nconst mapStateToProps = ({userReducer}) => {\n    return {\n      userReducer,\n    }\n  }\n  \n  const mapActionsToProps = (dispatch) => {\n    return bindActionCreators({\n      getUserData\n    }, dispatch)\n  }\n\nexport default connect(mapStateToProps, mapActionsToProps)(Account);"]},"metadata":{},"sourceType":"module"}