{"ast":null,"code":"import { ADD_TO_CART, UPDATE_CART_UNITS, REMOVE_CART_UNITS } from \"../actions/cart_actions\";\nimport { RESET_CART } from \"../types\";\nconst INITIAL_STATE = [];\nexport default function cartReducer(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        const product = action.payload;\n        const cart = state;\n        const existingProductIndex = findProductIndex(cart, product.id);\n        const updatedCart = existingProductIndex >= 0 ? updateProductUnits(cart, product) : [...cart, product];\n        return updatedCart;\n      }\n\n    case UPDATE_CART_UNITS:\n      {\n        const payload = action.payload;\n        const cart = state;\n        const existingProductIndex = findProductIndex(cart, payload.id);\n\n        if (existingProductIndex >= 0) {\n          let product = cart[existingProductIndex];\n          product.units = payload.units;\n          cart[existingProductIndex] = product;\n        }\n\n        return [...cart];\n      }\n\n    case REMOVE_CART_UNITS:\n      {\n        const payload = action.payload;\n        const cart = state;\n        let updatedCart = [];\n        const existingProductIndex = findProductIndex(cart, payload.id);\n\n        if (existingProductIndex >= 0) {\n          updatedCart = cart.filter(p => p.id !== payload.id);\n        }\n\n        return [...updatedCart];\n      }\n\n    case RESET_CART:\n      {\n        return [];\n      }\n  }\n\n  return state;\n}\n\nconst findProductIndex = (cart, productID) => {\n  return cart.findIndex(p => p.id === productID);\n};\n\nconst updateProductUnits = (cart, product) => {\n  const productIndex = findProductIndex(cart, product.id);\n  const updatedCart = [...cart];\n  const existingProduct = updatedCart[productIndex];\n  const updatedUnitsProduct = { ...existingProduct,\n    units: existingProduct.units + product.units\n  };\n  updatedCart[productIndex] = updatedUnitsProduct;\n  return updatedCart;\n};","map":{"version":3,"sources":["/home/sangee/Desktop/2021/projects/Micro-E-Commerce/shopping-fe/src/redux/reducers/cart_reducer.js"],"names":["ADD_TO_CART","UPDATE_CART_UNITS","REMOVE_CART_UNITS","RESET_CART","INITIAL_STATE","cartReducer","state","action","type","product","payload","cart","existingProductIndex","findProductIndex","id","updatedCart","updateProductUnits","units","filter","p","productID","findIndex","productIndex","existingProduct","updatedUnitsProduct"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,iBAArB,EAAwCC,iBAAxC,QAAgE,yBAAhE;AACA,SAAQC,UAAR,QAAyB,UAAzB;AAEA,MAAMC,aAAa,GAAG,EAAtB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGF,aAA7B,EAA4CG,MAAM,GAAG,EAArD,EAAyD;AAEtE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,WAAL;AAAkB;AAChB,cAAMS,OAAO,GAAGF,MAAM,CAACG,OAAvB;AACA,cAAMC,IAAI,GAAGL,KAAb;AAEA,cAAMM,oBAAoB,GAAGC,gBAAgB,CAACF,IAAD,EAAOF,OAAO,CAACK,EAAf,CAA7C;AAEA,cAAMC,WAAW,GAAGH,oBAAoB,IAAI,CAAxB,GACdI,kBAAkB,CAACL,IAAD,EAAOF,OAAP,CADJ,GAEd,CAAC,GAAGE,IAAJ,EAAUF,OAAV,CAFN;AAIA,eAAOM,WAAP;AACD;;AAED,SAAKd,iBAAL;AAAwB;AACtB,cAAMS,OAAO,GAAGH,MAAM,CAACG,OAAvB;AACA,cAAMC,IAAI,GAAGL,KAAb;AAEA,cAAMM,oBAAoB,GAAGC,gBAAgB,CAACF,IAAD,EAAOD,OAAO,CAACI,EAAf,CAA7C;;AAEA,YAAIF,oBAAoB,IAAI,CAA5B,EAA+B;AAC7B,cAAIH,OAAO,GAAGE,IAAI,CAACC,oBAAD,CAAlB;AACAH,UAAAA,OAAO,CAACQ,KAAR,GAAgBP,OAAO,CAACO,KAAxB;AAEAN,UAAAA,IAAI,CAACC,oBAAD,CAAJ,GAA6BH,OAA7B;AACD;;AAED,eAAO,CAAC,GAAGE,IAAJ,CAAP;AAED;;AAED,SAAKT,iBAAL;AAAwB;AACtB,cAAMQ,OAAO,GAAGH,MAAM,CAACG,OAAvB;AACA,cAAMC,IAAI,GAAGL,KAAb;AACA,YAAIS,WAAW,GAAG,EAAlB;AAEA,cAAMH,oBAAoB,GAAGC,gBAAgB,CAACF,IAAD,EAAOD,OAAO,CAACI,EAAf,CAA7C;;AAEA,YAAIF,oBAAoB,IAAI,CAA5B,EAA+B;AAC7BG,UAAAA,WAAW,GAAGJ,IAAI,CAACO,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASJ,OAAO,CAACI,EAAlC,CAAd;AACD;;AAED,eAAO,CAAC,GAAGC,WAAJ,CAAP;AAED;;AAED,SAAKZ,UAAL;AAAiB;AACf,eAAO,EAAP;AAED;AAjDH;;AAoDA,SAAOG,KAAP;AACD;;AAGD,MAAMO,gBAAgB,GAAG,CAACF,IAAD,EAAOS,SAAP,KAAqB;AAC5C,SAAOT,IAAI,CAACU,SAAL,CAAeF,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASM,SAA7B,CAAP;AACD,CAFD;;AAIA,MAAOJ,kBAAkB,GAAG,CAACL,IAAD,EAAOF,OAAP,KAAmB;AAC7C,QAAMa,YAAY,GAAGT,gBAAgB,CAACF,IAAD,EAAOF,OAAO,CAACK,EAAf,CAArC;AAEA,QAAMC,WAAW,GAAG,CAAC,GAAGJ,IAAJ,CAApB;AACA,QAAMY,eAAe,GAAGR,WAAW,CAACO,YAAD,CAAnC;AAEA,QAAME,mBAAmB,GAAG,EAC1B,GAAGD,eADuB;AAE1BN,IAAAA,KAAK,EAAEM,eAAe,CAACN,KAAhB,GAAwBR,OAAO,CAACQ;AAFb,GAA5B;AAKAF,EAAAA,WAAW,CAACO,YAAD,CAAX,GAA4BE,mBAA5B;AAEA,SAAOT,WAAP;AACD,CAdD","sourcesContent":["import {ADD_TO_CART, UPDATE_CART_UNITS, REMOVE_CART_UNITS} from \"../actions/cart_actions\";\nimport {RESET_CART} from \"../types\";\n\nconst INITIAL_STATE = [];\n\nexport default function cartReducer(state = INITIAL_STATE, action = {}) {\n\n  switch(action.type) {\n    case ADD_TO_CART: {\n      const product = action.payload;\n      const cart = state;\n\n      const existingProductIndex = findProductIndex(cart, product.id);\n\n      const updatedCart = existingProductIndex >= 0 \n          ? updateProductUnits(cart, product)\n          : [...cart, product];\n\n      return updatedCart;\n    }\n\n    case UPDATE_CART_UNITS: {\n      const payload = action.payload;\n      const cart = state;\n\n      const existingProductIndex = findProductIndex(cart, payload.id);\n\n      if (existingProductIndex >= 0) {\n        let product = cart[existingProductIndex];\n        product.units = payload.units;\n\n        cart[existingProductIndex] = product;\n      }\n\n      return [...cart]\n\n    }\n\n    case REMOVE_CART_UNITS: {\n      const payload = action.payload;\n      const cart = state;\n      let updatedCart = [];\n\n      const existingProductIndex = findProductIndex(cart, payload.id);\n\n      if (existingProductIndex >= 0) {\n        updatedCart = cart.filter(p => p.id !== payload.id)\n      }\n\n      return [...updatedCart]\n\n    }\n\n    case RESET_CART: {\n      return []\n\n    }\n  }\n\n  return state;\n}\n\n\nconst findProductIndex = (cart, productID) => {\n  return cart.findIndex(p => p.id === productID);\n};\n\nconst  updateProductUnits = (cart, product) => {\n  const productIndex = findProductIndex(cart, product.id);\n\n  const updatedCart = [...cart];\n  const existingProduct = updatedCart[productIndex];\n\n  const updatedUnitsProduct = {\n    ...existingProduct,\n    units: existingProduct.units + product.units\n  };\n\n  updatedCart[productIndex] = updatedUnitsProduct;\n\n  return updatedCart;\n};"]},"metadata":{},"sourceType":"module"}