{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sangee/Desktop/2021/projects/Micro-E-Commerce/shopping-fe/src/pages/shopping/ShoppingContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport Products from \"./products/Products\";\nimport CartList from \"./cart/CartList\";\nimport { addToCartAction, updateCartUnits } from \"../../redux/actions/cart_actions\";\nimport { getAllProducts } from \"../../redux/actions/product_action\";\nimport { saveShopping } from \"../../redux/actions/shopping_actions\";\nimport './style.css';\nimport Total from './cart/Total';\nimport { notification } from 'antd';\n\nclass ShoppingContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openNotificationWithIcon = type => {\n      notification[type]({\n        message: 'Your purchase is successful',\n        description: 'Time to time go to Previous shopping to check the status of your purchase.'\n      });\n    };\n\n    this.state = {\n      shoppingSaveReq: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllProducts(this.props.userReducer.token);\n  }\n\n  render() {\n    const {\n      cart,\n      addToCartAction,\n      updateCartUnits,\n      productReducer,\n      userReducer\n    } = this.props;\n\n    if (userReducer.shoppingSuccessful) {\n      this.openNotificationWithIcon(\"success\");\n    }\n\n    if (productReducer.products.length > 0) {\n      let total = 0;\n      let shoppingSaveReq = {};\n      let shoppingDetailDtos = [];\n      cart.forEach(element => {\n        total += element.units * element.price;\n        let product = {};\n        product.productId = element.id;\n        product.quantity = element.units;\n        shoppingDetailDtos.push(product);\n      });\n      shoppingSaveReq.username = this.props.userReducer.username;\n      shoppingSaveReq.totalAmount = total;\n      shoppingSaveReq.shoppingDetailDtos = shoppingDetailDtos;\n\n      const saveShopping = () => {\n        this.props.saveShopping(this.props.userReducer.token, shoppingSaveReq);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"pa3 pa5-ns w-100\",\n        children: [/*#__PURE__*/_jsxDEV(CartList, {\n          cart: cart,\n          updateCartUnits: updateCartUnits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Total, {\n          total: total,\n          saveShopping: saveShopping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Products, {\n          products: productReducer.products,\n          addToCartAction: addToCartAction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = ({\n  cart,\n  userReducer,\n  productReducer\n}) => {\n  return {\n    cart,\n    userReducer,\n    productReducer\n  };\n};\n\nconst mapActionsToProps = dispatch => {\n  return bindActionCreators({\n    addToCartAction,\n    updateCartUnits,\n    getAllProducts,\n    saveShopping\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ShoppingContainer);","map":{"version":3,"sources":["/home/sangee/Desktop/2021/projects/Micro-E-Commerce/shopping-fe/src/pages/shopping/ShoppingContainer.js"],"names":["React","connect","bindActionCreators","Products","CartList","addToCartAction","updateCartUnits","getAllProducts","saveShopping","Total","notification","ShoppingContainer","Component","constructor","props","openNotificationWithIcon","type","message","description","state","shoppingSaveReq","componentDidMount","userReducer","token","render","cart","productReducer","shoppingSuccessful","products","length","total","shoppingDetailDtos","forEach","element","units","price","product","productId","id","quantity","push","username","totalAmount","mapStateToProps","mapActionsToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from \"redux\";\n\nimport Products from \"./products/Products\";\nimport CartList from \"./cart/CartList\";\nimport {addToCartAction, updateCartUnits} from \"../../redux/actions/cart_actions\";\nimport {getAllProducts} from \"../../redux/actions/product_action\";\nimport {saveShopping} from \"../../redux/actions/shopping_actions\";\nimport './style.css';\nimport Total from './cart/Total';\nimport { notification } from 'antd';\n\nclass ShoppingContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shoppingSaveReq: {},\n    }\n  }\n\n  componentDidMount(){\n    this.props.getAllProducts(this.props.userReducer.token);\n  }\n\n  openNotificationWithIcon = type => {\n    notification[type]({\n      message: 'Your purchase is successful',\n      description:\n        'Time to time go to Previous shopping to check the status of your purchase.',\n    });\n  };\n\n  render() {\n    const {cart, addToCartAction, updateCartUnits, productReducer, userReducer} = this.props;\n\n    if(userReducer.shoppingSuccessful){\n      this.openNotificationWithIcon(\"success\")\n    }\n    \n    if(productReducer.products.length > 0){\n      let total = 0;\n      let shoppingSaveReq = {};\n      let shoppingDetailDtos = [];\n      cart.forEach(element => {\n        total += (element.units * element.price);\n        let product = {};\n        product.productId = element.id;\n        product.quantity = element.units;\n        shoppingDetailDtos.push(product);\n      });\n      shoppingSaveReq.username = this.props.userReducer.username;\n      shoppingSaveReq.totalAmount = total;\n      shoppingSaveReq.shoppingDetailDtos = shoppingDetailDtos;\n      const saveShopping = () => {\n        this.props.saveShopping(this.props.userReducer.token, shoppingSaveReq);\n      };\n      return (\n        <main className=\"pa3 pa5-ns w-100\">\n          <CartList cart={cart} updateCartUnits={updateCartUnits} />\n          <Total total={total} saveShopping={saveShopping} />\n          <Products products={productReducer.products} addToCartAction={addToCartAction} />\n        </main>\n      );\n    } else{\n        return(\n          <div></div>\n        )\n    }\n  }\n}\n\n\nconst mapStateToProps = ({cart, userReducer, productReducer}) => {\n  return {\n    cart,\n    userReducer,\n    productReducer,\n  }\n}\n\nconst mapActionsToProps = (dispatch) => {\n  return bindActionCreators({\n    addToCartAction,\n    updateCartUnits,\n    getAllProducts,\n    saveShopping\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(ShoppingContainer);\n"]},"metadata":{},"sourceType":"module"}